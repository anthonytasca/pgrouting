BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
-- q1
SELECT * FROM pgr_lineGraphFull(
    'SELECT id, source, target, cost, reverse_cost FROM edge_table WHERE id IN (5,8,9,11)'
);

 seq | source | target | cost | edge
-----+--------+--------+------+------
   1 |      3 |      6 |    1 |    5
   2 |     -1 |      5 |    1 |   -8
   3 |     -2 |      9 |    1 |    9
   4 |     -3 |     11 |    1 |   11
   5 |      6 |     -1 |    0 |    0
   6 |      6 |     -2 |    0 |    0
   7 |      6 |     -3 |    0 |    0
   8 |     -4 |     -1 |    0 |    0
   9 |     -4 |     -2 |    0 |    0
  10 |     -4 |     -3 |    0 |    0
  11 |     -5 |     -1 |    0 |    0
  12 |     -5 |     -2 |    0 |    0
  13 |     -5 |     -3 |    0 |    0
  14 |     -6 |     -4 |    1 |    8
  15 |      5 |     -6 |    0 |    0
  16 |     -7 |     -5 |    1 |   -9
  17 |      9 |     -7 |    0 |    0
(17 rows)

-- q2
CREATE TABLE result2 AS SELECT * FROM pgr_lineGraphFull(
    $$SELECT id, source, target, cost, reverse_cost
    FROM edge_table WHERE id IN (5,8,9,11)$$
);
SELECT 17

CREATE TABLE result2_vertices_pgr AS
SELECT *, NULL::BIGINT AS original_id
FROM (SELECT source AS id FROM result2
    UNION
    SELECT target FROM result2) as foo
ORDER BY id;
SELECT 12

UPDATE result2_vertices_pgr AS r SET original_id = v.id
FROM edge_table_vertices_pgr AS v WHERE v.id = r.id;
UPDATE 5

WITH a AS (SELECT e.id, e.original_id FROM result2_vertices_pgr AS e WHERE original_id IS NOT NULL),
b AS (SELECT * FROM result2 WHERE cost = 0 and source IN (SELECT id FROM a)),
c AS (SELECT * FROM b JOIN result2_vertices_pgr ON(source = id)),
d AS (SELECT c.source, v.original_id FROM c JOIN result2_vertices_pgr as v ON (target=v.id)),
e AS (SELECT DISTINCT c.target, c.original_id FROM c JOIN result2_vertices_pgr AS r ON(target = r.id AND r.original_id IS NULL))
UPDATE result2_vertices_pgr SET original_id = e.original_id FROM e WHERE e.target = id;
UPDATE 5

WITH a AS (SELECT e.id, e.original_id FROM result2_vertices_pgr AS e WHERE original_id IS NOT NULL),
b AS (SELECT * FROM result2 WHERE cost = 0 and target IN (SELECT id FROM a)),
c AS (SELECT * FROM b JOIN result2_vertices_pgr ON(target = id)),
d AS (SELECT c.target, v.original_id FROM c JOIN result2_vertices_pgr as v ON (source=v.id)),
e AS (SELECT DISTINCT c.source, c.original_id FROM c JOIN result2_vertices_pgr AS r ON(source = r.id AND r.original_id IS NULL))
UPDATE result2_vertices_pgr SET original_id = e.original_id FROM e WHERE e.source = id;
UPDATE 2

WITH a AS (SELECT id FROM result2_vertices_pgr WHERE original_id IS NULL),
b AS (SELECT source,edge FROM result2 WHERE source IN (SELECT id FROM a)),
c AS (SELECT id,source FROM edge_table WHERE id IN (SELECT edge FROM b))
UPDATE result2_vertices_pgr AS d SET original_id = (SELECT source FROM c WHERE c.id = (SELECT edge FROM b WHERE b.source = d.id)) WHERE id IN (SELECT id FROM a);
UPDATE 0

WITH a AS (SELECT id FROM result2_vertices_pgr WHERE original_id IS NULL),
b AS (SELECT target,edge FROM result2 WHERE target IN (SELECT id FROM a)),
c AS (SELECT id,target FROM edge_table WHERE id IN (SELECT edge FROM b))
UPDATE result2_vertices_pgr AS d SET original_id = (SELECT target FROM c WHERE c.id = (SELECT edge FROM b WHERE b.target = d.id)) WHERE id IN (SELECT id FROM a);
UPDATE 0

SELECT * FROM result2_vertices_pgr;

 id | original_id 
----+-------------
  3 |           3
  5 |           5
  6 |           6
  9 |           9
 11 |          11
 -7 |           9
 -6 |           5
 -3 |           6
 -2 |           6
 -1 |           6
 -5 |           6
 -4 |           6
(12 rows)

-- q3
UPDATE result2 SET cost = 100 WHERE source IN (SELECT target FROM result2 WHERE edge = 5) AND target IN (SELECT source FROM result2 WHERE edge = -8);

UPDATE 1

SELECT * FROM 
  (SELECT * FROM (SELECT * FROM pgr_dijkstra($$SELECT seq AS id, * FROM result2$$,
    (SELECT array_agg(id) FROM result2_vertices_pgr where original_id = 3),
    (SELECT array_agg(id) FROM result2_vertices_pgr where original_id = 5)
    )) as a
  WHERE start_vid = 3 AND end_vid = 5 AND (cost != 0 OR edge = -1)) as b;

 seq | path_seq | start_vid | end_vid | node | edge | cost | agg_cost 
-----+----------+-----------+---------+------+------+------+----------
  10 |        1 |         3 |       5 |    3 |    1 |    1 |        0
  12 |        3 |         3 |       5 |   -2 |    3 |    1 |        1
  14 |        5 |         3 |       5 |   -7 |   16 |    1 |        2
  16 |        7 |         3 |       5 |   -1 |    2 |    1 |        3
  17 |        8 |         3 |       5 |    5 |   -1 |    0 |        4
(5 rows)

-- q4
ROLLBACK;
ROLLBACK
