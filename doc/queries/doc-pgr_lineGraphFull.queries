BEGIN;
BEGIN
SET client_min_messages TO NOTICE;
SET
-- q1
SELECT * FROM pgr_lineGraphFull(
    'SELECT id, source, target, cost, reverse_cost
      FROM edge_table
      WHERE id IN (4,7,8,10)'
);
 seq | source | target | cost | edge
-----+--------+--------+------+------
   1 |     -1 |      5 |    1 |    4
   2 |      2 |     -1 |    0 |    0
   3 |     -2 |      2 |    1 |   -4
   4 |     -3 |      8 |    1 |   -7
   5 |     -4 |      6 |    1 |    8
   6 |     -5 |     10 |    1 |   10
   7 |      5 |     -2 |    0 |    0
   8 |      5 |     -3 |    0 |    0
   9 |      5 |     -4 |    0 |    0
  10 |      5 |     -5 |    0 |    0
  11 |     -6 |     -2 |    0 |    0
  12 |     -6 |     -3 |    0 |    0
  13 |     -6 |     -4 |    0 |    0
  14 |     -6 |     -5 |    0 |    0
  15 |     -7 |     -2 |    0 |    0
  16 |     -7 |     -3 |    0 |    0
  17 |     -7 |     -4 |    0 |    0
  18 |     -7 |     -5 |    0 |    0
  19 |     -8 |     -2 |    0 |    0
  20 |     -8 |     -3 |    0 |    0
  21 |     -8 |     -4 |    0 |    0
  22 |     -8 |     -5 |    0 |    0
  23 |     -9 |     -6 |    1 |    7
  24 |      8 |     -9 |    0 |    0
  25 |    -10 |     -7 |    1 |   -8
  26 |      6 |    -10 |    0 |    0
  27 |    -11 |     -8 |    1 |  -10
  28 |     10 |    -11 |    0 |    0
(28 rows)

-- q2
CREATE TABLE lineGraph_edges AS SELECT * FROM pgr_lineGraphFull(
    $$SELECT id, source, target, cost, reverse_cost
    FROM edge_table WHERE id IN (4,7,8,10)$$
);
SELECT 28
CREATE TABLE lineGraph_vertices AS
SELECT *, NULL::BIGINT AS original_id
FROM (SELECT source AS id FROM lineGraph_edges
    UNION
    SELECT target FROM lineGraph_edges) as foo
ORDER BY id;
SELECT 16
-- q3
UPDATE lineGraph_vertices AS r
  SET original_id = v.id
  FROM edge_table_vertices_pgr AS v
  WHERE v.id = r.id;
UPDATE 5
-- q4
WITH
a AS (SELECT e.id, e.original_id
       FROM lineGraph_vertices AS e
       WHERE original_id IS NOT NULL),
b AS (SELECT *
        FROM lineGraph_edges
        WHERE cost = 0 and source IN (SELECT id FROM a)),
c AS (SELECT *
        FROM b
        JOIN lineGraph_vertices
        ON(source = id)),
d AS (SELECT c.source, v.original_id
        FROM c
        JOIN lineGraph_vertices as v
        ON (target=v.id)),
e AS (SELECT DISTINCT c.target, c.original_id
        FROM c
        JOIN lineGraph_vertices AS r
        ON(target = r.id AND r.original_id IS NULL))
UPDATE lineGraph_vertices
  SET original_id = e.original_id
  FROM e
  WHERE e.target = id;
UPDATE 8
WITH
a AS (SELECT e.id, e.original_id
        FROM lineGraph_vertices AS e
        WHERE original_id IS NOT NULL),
b AS (SELECT *
        FROM lineGraph_edges
        WHERE cost = 0 and target IN (SELECT id FROM a)),
c AS (SELECT *
        FROM b
        JOIN lineGraph_vertices
        ON(target = id)),
d AS (SELECT c.target, v.original_id
        FROM c
        JOIN lineGraph_vertices as v
        ON (source=v.id)),
e AS (SELECT DISTINCT c.source, c.original_id
        FROM c
        JOIN lineGraph_vertices AS r
        ON(source = r.id AND r.original_id IS NULL))
UPDATE lineGraph_vertices
  SET original_id = e.original_id
  FROM e
  WHERE e.source = id;
UPDATE 3
-- q5
WITH
a AS (SELECT id
        FROM lineGraph_vertices
        WHERE original_id IS NULL),
b AS (SELECT source,edge
        FROM lineGraph_edges
        WHERE source IN (SELECT id FROM a)),
c AS (SELECT id,source
        FROM edge_table
        WHERE id IN (SELECT edge FROM b))
UPDATE lineGraph_vertices AS d
  SET original_id = (SELECT source
                       FROM c
                       WHERE c.id = (SELECT edge
                                       FROM b
                                       WHERE b.source = d.id))
  WHERE id IN (SELECT id FROM a);
UPDATE 0
WITH
a AS (SELECT id
        FROM lineGraph_vertices
        WHERE original_id IS NULL),
b AS (SELECT target,edge
        FROM lineGraph_edges
        WHERE target IN (SELECT id FROM a)),
c AS (SELECT id,target
        FROM edge_table
        WHERE id IN (SELECT edge FROM b))
UPDATE lineGraph_vertices AS d
  SET original_id = (SELECT target
                       FROM c
                       WHERE c.id = (SELECT edge
                                       FROM b
                                       WHERE b.target = d.id))
  WHERE id IN (SELECT id FROM a);
UPDATE 0
-- q6
SELECT * FROM lineGraph_vertices;
 id  | original_id
-----+-------------
   2 |           2
   5 |           5
   6 |           6
   8 |           8
  10 |          10
 -11 |          10
 -10 |           6
  -9 |           8
  -5 |           5
  -4 |           5
  -3 |           5
  -2 |           5
  -1 |           2
  -8 |           5
  -7 |           5
  -6 |           5
(16 rows)

-- q7
UPDATE lineGraph_edges
  SET cost = 100
  WHERE source IN (SELECT target
                     FROM lineGraph_edges
                     WHERE edge = 4) AND target IN (SELECT source
                                                      FROM lineGraph_edges
                                                      WHERE edge = -7);
UPDATE 1
-- q8
SELECT * FROM
  (SELECT * FROM
    (SELECT * FROM pgr_dijkstra($$SELECT seq AS id, * FROM lineGraph_edges$$,
      (SELECT array_agg(id) FROM lineGraph_vertices where original_id = 2),
      (SELECT array_agg(id) FROM lineGraph_vertices where original_id = 8)
    )) as a
  WHERE start_vid = 2 AND end_vid = 8 AND (cost != 0 OR edge = -1)) as b;
 seq | path_seq | start_vid | end_vid | node | edge | cost | agg_cost
-----+----------+-----------+---------+------+------+------+----------
  29 |        2 |         2 |       8 |   -1 |    1 |    1 |        0
  31 |        4 |         2 |       8 |   -4 |    5 |    1 |        1
  33 |        6 |         2 |       8 |  -10 |   25 |    1 |        2
  35 |        8 |         2 |       8 |   -3 |    4 |    1 |        3
  36 |        9 |         2 |       8 |    8 |   -1 |    0 |        4
(5 rows)

-- q9
ROLLBACK;
ROLLBACK
